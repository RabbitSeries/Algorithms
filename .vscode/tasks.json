{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "C/C++: g++.exe build active file",
            "windows": "cmd.exe",
            "command": "D:\\Build_Tool_Lib\\mingw64\\bin\\g++.exe",
            "args": [
                "-std=c++17",
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${workspaceFolder}\\.vscode\\debug\\${relativeFileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}",
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by user."
        },
        {
            "type": "shell",
            "label": "cl.exe build active file",
            "windows": {
                "options": {
                    "shell": {
                        "executable": "cmd.exe",
                        "args": [
                            "/C",
                            // The path to VsDevCmd.bat depends on the version of Visual Studio you have installed.
                            "\"D:/Program Files/Microsoft Visual Studio/2022/Professional/Common7/Tools/VsDevCmd.bat\"",
                            "&&"
                        ]
                    }
                }
            },
            "command": "cl.exe",
            "args": [
                "/Zi",
                "/EHsc",
                "/std:c++17",
                "${file}",
                // Specify the directory. No empty characters after /Fo. Use ":" to add sperators.
                // "/Fo${workspaceFolder}\\.vscode\\debug\\${relativeFileDirname}\\${fileBasenameNoExtension}",
                // "/Fo:",
                // "${workspaceFolder}\\.vscode\\debug\\${relativeFileDirname}\\${fileBasenameNoExtension}",
                "/Fo${workspaceFolder}\\.vscode\\debug\\${relativeFileDirname}\\${fileBasenameNoExtension}.obj",
                "/Fe${workspaceFolder}\\.vscode\\debug\\${relativeFileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$msCompile"
            ],
            "group": {
                "kind": "build",
            },
            "detail": "Task generated by user."
        },
        {
            "type": "shell",
            "label": "Clean *.exe, *.dll files",
            "command": "${workspaceFolder}\\.vscode\\clean_project.bat",
            "args": [
                "${workspaceFolder}"
            ],
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "Clean vc debug files",
            "command": "${workspaceFolder}\\.vscode\\clean_Project_Build_Debug.bat",
            "args": [
                "${workspaceFolder}"
            ],
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "[Cmake] Configure",
            "command": "D:/Program Files/CMake/bin/cmake.exe",
            "args": [
                "-DCMAKE_BUILD_TYPE:STRING=Debug",
                "-DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE",
                "-DCMAKE_C_COMPILER:FILEPATH=D:\\Build_Tool_Lib\\mingw64\\bin\\gcc.exe",
                "-DCMAKE_CXX_COMPILER:FILEPATH=D:\\Build_Tool_Lib\\mingw64\\bin\\g++.exe",
                "--no-warn-unused-cli",
                "-S",
                "D:/back_up/Algorithms",
                "-B",
                "D:/back_up/Algorithms/build",
                "-G",
                "MinGW Makefiles"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "[Cmake] Check source files syntax",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--target",
                "check_syntax"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        }
    ]
}